// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: communication.protos

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      int32                  `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestTask) Reset() {
	*x = RequestTask{}
	mi := &file_communication_protos_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTask) ProtoMessage() {}

func (x *RequestTask) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protos_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTask.ProtoReflect.Descriptor instead.
func (*RequestTask) Descriptor() ([]byte, []int) {
	return file_communication_protos_rawDescGZIP(), []int{0}
}

func (x *RequestTask) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

type GiveTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeTask      int32                  `protobuf:"varint,1,opt,name=type_task,json=typeTask,proto3" json:"type_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GiveTask) Reset() {
	*x = GiveTask{}
	mi := &file_communication_protos_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveTask) ProtoMessage() {}

func (x *GiveTask) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protos_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveTask.ProtoReflect.Descriptor instead.
func (*GiveTask) Descriptor() ([]byte, []int) {
	return file_communication_protos_rawDescGZIP(), []int{1}
}

func (x *GiveTask) GetTypeTask() int32 {
	if x != nil {
		return x.TypeTask
	}
	return 0
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      int32                  `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_communication_protos_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protos_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_communication_protos_rawDescGZIP(), []int{2}
}

func (x *TaskResult) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           string                 `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_communication_protos_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protos_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_communication_protos_rawDescGZIP(), []int{3}
}

func (x *Ack) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

var File_communication_protos protoreflect.FileDescriptor

const file_communication_protos_rawDesc = "" +
	"\n" +
	"\x14communication.protos\"*\n" +
	"\vRequestTask\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\x05R\bworkerId\"'\n" +
	"\bGiveTask\x12\x1b\n" +
	"\ttype_task\x18\x01 \x01(\x05R\btypeTask\")\n" +
	"\n" +
	"TaskResult\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\x05R\bworkerId\"\x17\n" +
	"\x03Ack\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\tR\x03ack2[\n" +
	"\vCoordinator\x12'\n" +
	"\n" +
	"AssignTask\x12\f.RequestTask\x1a\t.GiveTask\"\x00\x12#\n" +
	"\fFinishedTask\x12\v.TaskResult\x1a\x04.Ack\"\x00BeZchttps://github.com/kmu01/TP1-Distribuidos-MapReduce/blob/base/mapreduce/protos/communication;protosb\x06proto3"

var (
	file_communication_protos_rawDescOnce sync.Once
	file_communication_protos_rawDescData []byte
)

func file_communication_protos_rawDescGZIP() []byte {
	file_communication_protos_rawDescOnce.Do(func() {
		file_communication_protos_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_communication_protos_rawDesc), len(file_communication_protos_rawDesc)))
	})
	return file_communication_protos_rawDescData
}

var file_communication_protos_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_communication_protos_goTypes = []any{
	(*RequestTask)(nil), // 0: RequestTask
	(*GiveTask)(nil),    // 1: GiveTask
	(*TaskResult)(nil),  // 2: TaskResult
	(*Ack)(nil),         // 3: Ack
}
var file_communication_protos_depIdxs = []int32{
	0, // 0: Coordinator.AssignTask:input_type -> RequestTask
	2, // 1: Coordinator.FinishedTask:input_type -> TaskResult
	1, // 2: Coordinator.AssignTask:output_type -> GiveTask
	3, // 3: Coordinator.FinishedTask:output_type -> Ack
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_communication_protos_init() }
func file_communication_protos_init() {
	if File_communication_protos != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_communication_protos_rawDesc), len(file_communication_protos_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_communication_protos_goTypes,
		DependencyIndexes: file_communication_protos_depIdxs,
		MessageInfos:      file_communication_protos_msgTypes,
	}.Build()
	File_communication_protos = out.File
	file_communication_protos_goTypes = nil
	file_communication_protos_depIdxs = nil
}
